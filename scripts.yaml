purge:
  alias: purge
  sequence:
    - service: recorder.purge
      data:
        keep_days: 1
        repack: true

refresh:
  alias: 'refresh'
  sequence:
    - service: automation.reload
    - service: script.reload

cast:
  alias: Cast
  sequence:
    - service: media_extractor.play_media
      entity_id: media_player.audio
      data_template:
        media_content_id: "{{states.input_text.url.state}}"
        media_content_type: video/youtube
    - service: media_player.volume_mute
      data:
        entity_id: media_player.audio
        is_volume_muted: 'no'

night_mode:
  alias: Good night
  sequence:
    - service: mqtt.publish
      data:
        topic: /home/laptop
        payload: 'standby'
    - service: switch.turn_off
      entity_id: switch.projector
    - delay:
          milliseconds: 300
    - service: switch.turn_off
      entity_id: switch.projector_ir
    - service: homeassistant.turn_on
      entity_id: light.kitchen_night, light.spot, input_boolean.night
    - service: remote.send_command
      data:
        entity_id: remote.roku
        command:
          - down
    - wait_template: "{{ states.sensor.entrance.state == 'Motion' }}"
      timeout: '00:05:00'
    - service: homeassistant.turn_on
      entity_id: automation.bob_on
    - service: light.turn_off
      entity_id: light.spot, light.kitchen_night
    - service: media_player.turn_off
      entity_id: media_player.audio

projector_off:
  alias: Turn Projector OFF
  sequence:
    # - service: switch.turn_off
    #   entity_id: switch.projector_ir
    - service: switch.turn_off
      entity_id: switch.projector_ir
    - delay:
          milliseconds: 300
    - service: switch.turn_off
      entity_id: switch.projector_ir
   
coffee_machine_on:
  alias: Make coffee
  sequence:
    - service: switch.turn_on
      entity_id: switch.coffee_machine
    #- wait_template: "{{ states.binary_sensor.motion_bar.state == 'on' }}"
    - wait_template: "{{ states.binary_sensor.motion_living.state == 'on' }}"
      timeout: '00:04:00'
      continue_on_timeout: false
    - service: switch.turn_on
      entity_id: switch.coffee

movie_time:
  alias: movie time
  sequence:
    - service: switch.turn_on
      entity_id: switch.projector
    - service: light.turn_on
      entity_id: light.spot
    - service: homeassistant.turn_off
      entity_id: group.guster
    - service: light.turn_off
      data_template:
        entity_id: >
          {%- for x in states.light if x.state == 'on' and 
          x.entity_id != 'light.darkroom' and 
          x.entity_id != 'light.lightroom' and 
          x.entity_id != 'light.wc' and 
          x.entity_id != 'light.spot' and (as_timestamp(now()) - as_timestamp(x.last_changed) | int < 120)  -%} 
          {{- "," if not loop.first-}}{{ x.entity_id }}{{-endif-}}
          {%- endfor -%}

restart:
  alias: abracadabra
  sequence:
    - service: homeassistant.restart

house_mode_away:
  sequence:
    - service: light.turn_off
      data_template:
        entity_id: >
          {%- for x in states.light if
          x.entity_id != 'light.entrance' -%}
          {{- "," if not loop.first-}}{{ x.entity_id }}{{-endif-}}
          {%- endfor -%}
    - service: media_player.turn_off
      data_template:
        entity_id: >
          {%- for x in states.media_player if
          x.entity_id != 'media_player.spotify' and (x.entity_id != 'media_player.roku' or states.binary_sensor.tv.state == 'on')-%}
          {{- "," if not loop.first-}}{{ x.entity_id }}{{-endif-}}
          {%- endfor -%}
    - service: switch.turn_off
      entity_id: switch.projector

nothing:
  alias: nothing
  sequence: []

door_lock:
  alias: Door Lock
  sequence:
    - service: shell_command.door
      data:
        arg: "lock"
    - service: notify.hass
      data:
        title: "{{now().strftime('%H:%M:%S')}}"
        message:  "Door locked"
    - service: automation.turn_on
      entity_id: automation.door_unlock

door_unlock:
  alias: Door Unlock
  sequence:
    - service: shell_command.door
      data:
        arg: "unlock"
    - service: notify.hass
      data:
        title: "{{now().strftime('%H:%M:%S')}}"
        message:  "Unlocking door for {{states.sensor.house.state}}"
    - service: automation.turn_off
      entity_id: automation.door_unlock

vacuum_livingroom:
  alias: livingroom cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[13866,25300,26000,29200,1],[21700,29200,26000,31200,1]]

vacuum_reverse:
  alias: vacuum reverse
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_rc_move
        params: [{"velocity":-0.3, "omega":0.0, "duration":1500}]

vacuum_hallway:
  alias: hallway cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[18400,29800,21100,32100,1],[19950,32100,21100,35800,1],[21100,34800,23500,35800,1]]

vacuum_toilet:
  alias: toilet cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[18200,32700,19800,34500,1]]

vacuum_lightroom:
  alias: lightroom cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[18000,36000,20500,39200,1]]

vacuum_darkroom:
  alias: darkroom room cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[23500,34800,25800,39200,1]]

vacuum_bedroom:
  alias: bedroom cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[21700,31900,26500,34500,1]]

vacuum_mop_bathroom:
  alias: bathroom mop
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[20800,36000,23400,39200,1]]
    - service: vacuum.set_fan_speed
      data:
        entity_id: vacuum.harry_potter
        fan_speed: '105'

vacuum_bathroom:
  alias: bathroom cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[20800,36000,23400,39200,1]]

vacuum_kitchen:
  alias: kitchen cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[21700,29200,26000,31200,1]]

vacuum_stop:
  alias: vacuum stop
  sequence:
    - service: vacuum.return_to_base
      data:
        entity_id: vacuum.harry_potter

spacex:
  alias: Space X Launch
  sequence:
    - service: notify.hass
      data:
        title: "SPACE X START IN 10MIN"
        message: >
          Location: {{ states('sensor.spacex_next_launch_site_name_long') }}
            ├─ Start Time: {{ states('sensor.spacex_next_launch_time') }}
            ├─ Rocket:     {{ states('sensor.spacex_next_rocket') }}
            └─ Link:   {{ states.sensor.spacex.attributes.links.video_link }}

launch:
  alias: Launch
  sequence:
    - service: notify.hass
      data:
        title: "LAUNCH STARTS IN 10MIN"
        message: >
          Location: {{ states.sensor.launch.state }}
            ├─ Start Time: {{ states.sensor.launch_time.state }}
            └─ Link:  {{ states.sensor.mission_video_link.state }}

zero_bed:
  alias: Tare Bed
  sequence:
    - service: mqtt.publish
      data_template:
        topic: "/room/bedroom/bed/tare"
        payload: '0'
