night_mode:
  alias: Good night
  sequence:
    - service: script.turn_on
      data_template:
        entity_id: >
          {% if states.sensor.projector_status.state == 'on' %} script.projector_off
          {% else %} script.nothing
          {% endif %}
    - service: light.turn_off
      data_template:
        entity_id: >
          {%- for state in states.light if state.entity_id != 'light.entrance' -%}
          {{- "," if not loop.first-}}{{ state.entity_id }}{{-endif-}}
          {%- endfor -%}
    - service: light.turn_on
      entity_id: light.kitchen
    - service: switch.turn_off
      data_template:
        entity_id: >
          {%- for state in states.switch if
          state.entity_id != 'switch.projector' and
          state.entity_id != 'switch.projector_esc' and
          state.entity_id != 'switch.rikis_food' and
          state.entity_id != 'switch.trantor_power'-%}
          {{- "," if not loop.first-}}{{ state.entity_id }}{{-endif-}}
          {%- endfor -%}
    - service: light.turn_on
      entity_id: light.kitchen
    # - service: media_player.play_media
      # data:
        # entity_id: media_player.living_room_speaker
        # media_content_id: !secret good_night_wav
        # media_content_type: music

projector_off:
  alias: Turn Projector OFF
  sequence:
    - service: switch.turn_off
      entity_id: switch.projector
    - delay: '00:00:01'
    - service: switch.turn_off
      entity_id: switch.projector

make_coffe:
  alias: Intelia coffee machine
  sequence:
    service: script.turn_on
    data_template:
      entity_id: >
        {% if states.switch.coffee_machine.state == 'on' %} script.coffee_machine_on
        {% elif states.switch.coffee_machine.state == 'off'%} script.coffee_machine_off
        {% endif %}

coffee_machine_off:
  alias: Power on and make coffee
  sequence:
    - service: switch.turn_on
      entity_id: switch.coffee_machine
    - wait_template: "{{ states.switch.coffee_machine.state == 'on' }}"
      timeout: '00:01:10'
      continue_on_timeout: false
    - service: notify.hass
      data:
        message:  "intelia: is on and waiting"
    - wait_template: "{{ states.binary_sensor.motion_sensor_kitchen.state == 'on' }}"
      timeout: '00:02:00'
      continue_on_timeout: false
    - service: notify.hass
      data:
        message:  "intelia: human detected, starting countdown 10s..."
    - delay: '00:00:10'
    # - service: switch.turn_on
      # entity_id: switch.coffee
    - service: light.turn_on
      entity_id: light.bob
    
coffee_machine_on:
  alias: Make coffee
  sequence:
    - wait_template: "{{ states.binary_sensor.motion_sensor_kitchen.state == 'on' }}"
      timeout: '00:02:00'
      continue_on_timeout: false
    - service: switch.turn_on
      entity_id: switch.coffee


movie_time:
  alias: movie time
  sequence:
    - service: light.turn_on
      entity_id: light.spot
    - service: homeassistant.turn_off
      entity_id: group.guster
    - service: switch.turn_on
      entity_id: switch.projector
    - service: light.turn_off
      data_template:
        entity_id: >
          {%- for state in states.light if state.entity_id != 'light.spot' and
          state.entity_id != 'light.entrance' -%}
          {{- "," if not loop.first-}}{{ state.entity_id }}{{-endif-}}
          {%- endfor -%}
    - service: media_player.media_stop
      data:
        entity_id: media_player.audio_funk

storj_information:
  alias: storj information
  sequence:
    - service: shell_command.storj
    - service: shell_command.tts_storj
      data_template:
        arg: "{{states.sensor.storj.state}}"
    - delay: '00:00:01'
    - service: media_player.play_media
      data:
        entity_id: media_player.living_room_speaker
        media_content_id: !secret storj_wav
        media_content_type: music

restart:
  alias: abracadabra
  sequence:
    - service: homeassistant.restart

house_mode_away:
  sequence:
    - service: light.turn_off
      data_template:
        entity_id: >
          {%- for state in states.light if state.entity_id != 'light.entrance' -%}
          {{- "," if not loop.first-}}{{ state.entity_id }}{{-endif-}}
          {%- endfor -%}
    - service: switch.turn_off
      data_template:
        entity_id: >
          {%- for state in states.switch if
          state.entity_id != 'switch.rikis_food' and
          state.entity_id != 'switch.trantor_power' and
          state.entity_id != 'switch.projector_esc' and
          state.entity_id != 'switch.projector' -%}
          {{- "," if not loop.first-}}{{ state.entity_id }}{{-endif-}}
          {%- endfor -%}
    - service: media_player.turn_off
      data_template:
        entity_id: >
          {%- for state in states.media_player -%}
          {{- "," if not loop.first-}}{{ state.entity_id }}{{-endif-}}
          {%- endfor -%}

nothing:
  alias: nothing
  sequence:

door_lock:
  alias: Door Lock
  sequence:
    - service: shell_command.lock
    - service: notify.hass
      data:
        title: "{{now().strftime('%H:%M:%S')}}"
        message:  "Door locked"
    - service: automation.turn_on
      entity_id: automation.door_unlock

door_unlock:
  alias: Door Unlock
  sequence:
    - service: shell_command.unlock
    - service: notify.hass
      data:
        title: "{{now().strftime('%H:%M:%S')}}"
        message:  "Unlocking door for {{states.sensor.house.state}}"
    - service: automation.turn_off
      entity_id: automation.door_unlock

vacuum_livingroom:
  alias: livingroom cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[13866,25300,26000,29200,1],[21700,29200,26000,31200,1]]

vacuum_hallway:
  alias: hallway cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[18400,29800,21100,32100,1],[19950,32100,21100,35800,1],[21100,34800,23500,35800,1]]

vacuum_toilet:
  alias: toilet cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[18200,32700,19800,34500,1]]

vacuum_lightroom:
  alias: lightroom cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[18000,36000,20500,39200,1]]

vacuum_darkroom:
  alias: darkroom room cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[23500,34800,25800,39200,1]]

vacuum_bedroom:
  alias: bedroom cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[21200,37900,26600,34700,1]]

vacuum_mop_bathroom:
  alias: bathroom mop
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[20800,36000,23400,39200,1]]
    - service: vacuum.set_fan_speed
      data:
        entity_id: vacuum.harry_potter
        fan_speed: '105'

vacuum_bathroom:
  alias: bathroom cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[20800,36000,23400,39200,1]]

vacuum_kitchen:
  alias: kitchen cleansing
  sequence:
    - service: vacuum.send_command
      data:
        entity_id: vacuum.harry_potter
        command: app_zoned_clean
        params: [[21700,29200,26000,31200,1]]

vacuum_stop:
  alias: vacuum stop
  sequence:
    - service: vacuum.return_to_base
      data:
        entity_id: vacuum.harry_potter
